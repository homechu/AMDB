# Generated by Django 3.2.6 on 2024-07-01 11:08

import apps.openstacks.models.base
import apps.openstacks.models.records
import apps.openstacks.models.servers
import apps.openstacks.models.volumes
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import selfpackage.django.models.fields.timestamp
import selfpackage.django.models.fields.uuid
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cmdb', '0076_auto_20240626_1027'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddressThrough',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('ip_address', models.GenericIPAddressField(default=None, null=True, verbose_name='IP地址')),
            ],
            options={
                'verbose_name': '地址',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FlavorsModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=255, verbose_name='规格名称')),
                ('vcpus', models.PositiveSmallIntegerField(verbose_name='核心数')),
                ('ram', models.PositiveIntegerField(verbose_name='内存大小(MiB)')),
                ('disk', models.PositiveIntegerField(verbose_name='磁盘大小(GiB)')),
                ('enable', models.BooleanField(default=True, verbose_name='启用')),
                ('module_perm', models.ManyToManyField(default=None, to='cmdb.Module')),
                ('product_perm', models.ManyToManyField(default=None, to='cmdb.ProductLine')),
            ],
            options={
                'verbose_name': '规格',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ImagesModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=50, verbose_name='镜像名称')),
                ('status', models.CharField(blank=True, max_length=50, verbose_name='状态')),
                ('visibility', models.CharField(blank=True, max_length=50, verbose_name='可见度')),
                ('container_format', models.CharField(blank=True, max_length=255, verbose_name='容器格式')),
                ('disk_format', models.CharField(blank=True, max_length=255, verbose_name='硬碟格式')),
                ('os_distro', models.CharField(blank=True, max_length=255, verbose_name='操作系統')),
                ('enable', models.BooleanField(default=True, verbose_name='启用')),
                ('is_win', models.BooleanField(default=False, verbose_name='是否為Windows')),
                ('module_perm', models.ManyToManyField(default=None, to='cmdb.Module')),
                ('product_perm', models.ManyToManyField(default=None, to='cmdb.ProductLine')),
            ],
            options={
                'verbose_name': '镜像',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectsModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=50, verbose_name='项目名称')),
                ('idc', models.ForeignKey(limit_choices_to={'type': 3}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.idc', verbose_name='虚拟机房')),
            ],
            options={
                'verbose_name': '项目',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RegionModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=50, verbose_name='区域名称')),
                ('details', models.JSONField(default=apps.openstacks.models.base.RegionModel._default)),
                ('idc', models.ForeignKey(limit_choices_to={'type': 3}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.idc', verbose_name='虚拟机房')),
            ],
            options={
                'verbose_name': '区域',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ServersModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=50, verbose_name='主机名')),
                ('key_name', models.CharField(max_length=20, null=True, verbose_name='Keypair Name')),
                ('metadata', models.JSONField(blank=True, default=apps.openstacks.models.servers.ServersModel._default, verbose_name='元数据')),
                ('status', models.CharField(choices=[('ACTIVE', '运行中'), ('SHUTOFF', '关机'), ('BUILD', '构建中'), ('REBUILD', '重建中'), ('REBOOT', '重启中'), ('ERROR', '错误'), ('DELETE', '删除')], max_length=20, null=True, verbose_name='状态')),
                ('ip_address', models.GenericIPAddressField(default=None, null=True, verbose_name='IP地址')),
                ('hypervisor_hostname', models.CharField(blank=True, default='', max_length=128, verbose_name='硬件名称')),
                ('app', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.app', verbose_name='业务')),
                ('flavor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='openstacks.flavorsmodel', verbose_name='规格')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='openstacks.imagesmodel', verbose_name='镜像')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.projectsmodel', verbose_name='所属项目')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
            ],
            options={
                'verbose_name': '虚拟机',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='VolumesAttachments',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('attached_at', models.DateTimeField(null=True, verbose_name='绑定时间')),
                ('device', models.CharField(blank=True, default='', max_length=255, verbose_name='档案系统')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
                ('server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='openstacks.serversmodel')),
            ],
            options={
                'verbose_name': '绑定卷',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ZonesModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(default='', max_length=50, verbose_name='可用区名称')),
                ('total_ram', models.PositiveIntegerField(default=0, verbose_name='总共内存')),
                ('available_ram', models.PositiveIntegerField(default=0, verbose_name='可用内存')),
                ('available_disk', models.PositiveIntegerField(default=0, verbose_name='可用容量')),
                ('virtual_num', models.PositiveIntegerField(default=0, verbose_name='已创建虚拟机数量')),
                ('status', models.CharField(choices=[('enabled', '启用'), ('disabled', '禁用')], default='', max_length=50, verbose_name='可用状态')),
                ('state', models.CharField(choices=[('up', '运行中'), ('down', '关闭')], default='', max_length=50, verbose_name='运行状态')),
                ('hypervisors', models.JSONField(default=apps.openstacks.models.servers.ZonesModel._default, verbose_name='实体主机讯息')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
            ],
            options={
                'verbose_name': '可用区',
                'unique_together': {('region', 'name')},
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='VolumeTypeModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=50, verbose_name='类型名称')),
                ('description', models.CharField(max_length=1024, verbose_name='类型描述')),
                ('is_public', models.BooleanField(default=False, verbose_name='公共类型')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
            ],
            options={
                'verbose_name': '卷类型',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='VolumesModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(blank=True, default='', max_length=50, verbose_name='名称')),
                ('size', models.PositiveIntegerField(verbose_name='磁盘大小(GiB)')),
                ('volume_type', models.CharField(max_length=255, verbose_name='类型')),
                ('status', models.CharField(choices=[('available', '可用'), ('in-use', '使用中'), ('deleting', '删除中')], max_length=20, verbose_name='状态')),
                ('description', models.CharField(blank=True, default='', max_length=255, verbose_name='描述')),
                ('volume_image_metadata', models.JSONField(blank=True, default=apps.openstacks.models.volumes.VolumesModel._default, verbose_name='元数据')),
                ('attachments', models.ManyToManyField(related_name='attach_vols', through='openstacks.VolumesAttachments', to='openstacks.ServersModel', verbose_name='已绑定服务器')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.projectsmodel', verbose_name='所属项目')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
            ],
            options={
                'verbose_name': '卷',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='volumesattachments',
            name='volume',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='openstacks.volumesmodel'),
        ),
        migrations.CreateModel(
            name='SubnetsModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('network_id', models.CharField(max_length=50, verbose_name='网路ID')),
                ('name', models.CharField(max_length=100, verbose_name='子网名称')),
                ('cidr', models.CharField(max_length=20, verbose_name='子网网段')),
                ('total_ips', models.PositiveSmallIntegerField(verbose_name='IP总数')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.projectsmodel', verbose_name='所属项目')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
            ],
            options={
                'verbose_name': '子网',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='serversmodel',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='openstacks.zonesmodel', verbose_name='可用区'),
        ),
        migrations.CreateModel(
            name='ServerGroupsModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
            ],
            options={
                'verbose_name': '主机群组',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SecurityGroupsModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('name', models.CharField(max_length=255, verbose_name='安全组名称')),
                ('description', models.CharField(blank=True, default='', max_length=500, verbose_name='描述')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否为默认安全组')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.projectsmodel', verbose_name='所属项目')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
            ],
            options={
                'verbose_name': '安全组',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RulesModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('remote_ip_prefix', models.CharField(blank=True, default='', max_length=20, verbose_name='IP段')),
                ('remote_group_id', models.CharField(blank=True, default='', max_length=100, verbose_name='远端组ID')),
                ('port_range_min', models.PositiveIntegerField(default=None, null=True, verbose_name='Min Port')),
                ('port_range_max', models.PositiveIntegerField(default=None, null=True, verbose_name='Max Port')),
                ('protocol', models.CharField(choices=[('TCP', 'TCP'), ('UDP', 'UDP'), ('ICMP', 'ICMP'), ('ANY', 'ANY')], default='ANY', max_length=20, verbose_name='协议')),
                ('direction', models.CharField(choices=[('ingress', '入口'), ('egress', '出口')], max_length=20, verbose_name='方向')),
                ('ethertype', models.CharField(choices=[('IPv4', 'IPv4'), ('IPv6', 'IPv6')], default='IPv4', max_length=20, verbose_name='类型')),
                ('description', models.CharField(blank=True, default='', max_length=500, verbose_name='描述')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
                ('security_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='openstacks.securitygroupsmodel')),
            ],
            options={
                'verbose_name': '安全规则',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='RecordsModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('action_type', models.CharField(choices=[('CREATE', '创建'), ('UPDATE', '更新'), ('DELETE', '删除')], max_length=20)),
                ('resource', models.CharField(max_length=20)),
                ('details', models.JSONField(default=apps.openstacks.models.records.RecordsModel._default)),
                ('status', models.CharField(default='SUCCESS', max_length=20)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.projectsmodel', verbose_name='所属项目')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '纪录',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PortsModel',
            fields=[
                ('is_deleted', models.DateTimeField(db_index=True, editable=False, null=True)),
                ('deleted_by_cascade', models.BooleanField(default=False, editable=False)),
                ('identifier', selfpackage.django.models.fields.uuid.AutoUUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='识别码')),
                ('create_time', selfpackage.django.models.fields.timestamp.CreatedTimestampField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('update_time', selfpackage.django.models.fields.timestamp.UpdatedTimestampField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('create_by', models.CharField(max_length=255, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(max_length=255, null=True, verbose_name='编辑者')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='OpenstackID')),
                ('status', models.CharField(max_length=20, verbose_name='状态')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='备注')),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ports', to='openstacks.serversmodel', verbose_name='服务器ID')),
                ('fixed_ips', models.ManyToManyField(through='openstacks.AddressThrough', to='openstacks.SubnetsModel', verbose_name='IP地址')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.projectsmodel', verbose_name='所属项目')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域')),
                ('security_groups', models.ManyToManyField(to='openstacks.SecurityGroupsModel', verbose_name='安全组')),
            ],
            options={
                'verbose_name': '接口',
            },
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='imagesmodel',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域'),
        ),
        migrations.AddField(
            model_name='flavorsmodel',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域'),
        ),
        migrations.AddField(
            model_name='addressthrough',
            name='port',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.portsmodel'),
        ),
        migrations.AddField(
            model_name='addressthrough',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.regionmodel', verbose_name='所属区域'),
        ),
        migrations.AddField(
            model_name='addressthrough',
            name='subnet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='openstacks.subnetsmodel'),
        ),
    ]
